name: Azure Pipelines
variables:
  python.version: '3.7.6'

stages:
- stage: Provision
  displayName: Provision for Azure Pipeline
  jobs:
    - job: provision_azure_infrastructure
      displayName: Provisioning AppService
      pool:
        vmImage: 'ubuntu-18.04'
      steps:
        - task: DownloadSecureFile@1
          name: principal
          displayName: 'Download azure principal confidential'
          inputs:
            secureFile: 'set_azure_env.sh'

        - bash: |
            cp $(Agent.TempDirectory)/set_azure_env.sh $(System.DefaultWorkingDirectory)/terraform
            cd $(System.DefaultWorkingDirectory)/terraform
            chmod 755 set_azure_env.sh
          displayName: Copy set_azure_env.sh
           
        - task: InstallSSHKey@0
          inputs:
            knownHostsEntry: 'known_hosts'
            sshPublicKey: $(PUBLIC_KEY)
            sshKeySecureFile: 'id_rsa'

        - bash: |
            echo System Default Working Directory: $(System.DefaultWorkingDirectory)
            echo Azure Principal at : $(principal.secureFilePath)
            cd $(Agent.TempDirectory)
            pwd
            ls -la
            cat id_rsa.pub
            cd ~/.ssh/
            pwd
            ls -la
            cat known_hosts
            cd $(System.DefaultWorkingDirectory)  
            pwd
            ls -la
          displayName: Check build environment

        - task: TerraformInstaller@0
          displayName: Install Terraform
          inputs:
              terraformVersion: latest


- stage: Build
  jobs:    
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
    # Needed for Terraform VM deployment
    
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'path/to/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: ''
              appName: ''
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


